plugins {
    id 'com.android.application'
}

archivesBaseName = rootProject.name
def midletArchivesBaseName

android {
    compileSdk COMPILE_SDK
    ndkVersion NDK_VERSION
    namespace 'ru.playsoftware.j2meloader'

    defaultConfig {
        applicationId "ru.woesss.j2meloader"
        minSdk MIN_SDK
        targetSdk TARGET_SDK
        versionCode 30
        versionName "0.81"
        resValue 'string', 'app_name', rootProject.name
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
        }
        debug {
            applicationIdSuffix '.debug'
            jniDebuggable true
            multiDexEnabled true
            multiDexKeepProguard file('multidex-config.pro')
        }
    }

    lint {
        disable 'MissingTranslation'
    }

    flavorDimensions 'default'
    productFlavors {
        // variant dimension for create emulator
        emulator {
            buildConfigField 'boolean', 'FULL_EMULATOR', 'true'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // variant dimension for create android port from J2ME app source
        midlet {
            buildConfigField 'boolean', 'FULL_EMULATOR', 'false'
            // configure midlet's port project params here, as default it read from app manifest,
            // placed to 'app/src/midlet/resources/MIDLET-META-INF/MANIFEST.MF'
            def props = getMidletManifestProperties()
            def midletName = props.getValue('MIDlet-Name').trim()
            def apkName = midletName.replaceAll('[/\\\\:*?\"<>|]', '').replace(' ', '_')
            applicationId "com.example.androidlet.${apkName.toLowerCase()}"
            versionName = props.getValue('MIDlet-Version')
            resValue 'string', 'app_name', midletName
            midletArchivesBaseName = apkName
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-midlet.pro'
        }
    }

    splits {
        abi {
            enable true
            include 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            universalApk true
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/cpp/Android.mk'
        }
    }

    applicationVariants.all {
        if (buildType.name == 'debug' && flavorName == 'emulator') {
            resValue 'string', 'app_name', 'JL-Debug'
        }
        def baseName = flavorName == 'midlet' ? "${midletArchivesBaseName}-" : "${rootProject.name}_"
        outputs.all {
            outputFileName = "${baseName}${versionName}-${dirName}-${buildType.name}.apk".replaceAll('--+', '-')
        }
    }
}

def getMidletManifestProperties() {
    def file = project.file('src/midlet/resources/MIDLET-META-INF/MANIFEST.MF')
    def mf = new java.util.jar.Manifest()
    if (file.exists()) {
        def is = null
        try {
            is = new FileInputStream(file)
            mf.read(is)
        } finally {
            if (is != null) is.close()
        }
    }
    return mf.mainAttributes
}

dependencies {
    implementation project(':dexlib')

    def roomVersion = '2.4.2'
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"

    annotationProcessor 'com.google.auto.service:auto-service:1.0.1'
    compileOnly 'com.google.auto.service:auto-service-annotations:1.0.1'

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'ch.acra:acra-dialog:5.8.4'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.github.billthefarmer:mididriver:v1.21'
    implementation 'com.github.nikita36078:filepicker:4.3.0'
    implementation 'com.github.nikita36078:mobile-ffmpeg:v4.3.2-compact'
    implementation 'com.github.nikita36078:pngj:2.2.3'
    implementation 'com.github.yukuku:ambilwarna:2.0.1'
    implementation 'com.github.penn5:donations:3.6.0'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'net.lingala.zip4j:zip4j:2.9.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'junit:junit:4.13.2'
}
